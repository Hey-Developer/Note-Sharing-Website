{"version":3,"sources":["Redux/actions/authActions.js","config/fbConfig.js","Redux/asyncActions.js/authAsyncActions.js","helpers/isEmailVerified.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/layouts/SignedInLinks.js","components/layouts/SignedOutLinks.js","components/layouts/Navbar.js","Redux/actions/projectsActions.js","Redux/asyncActions.js/projectsAsyncActions.js","components/projects/CreateProject.js","components/projects/ProjectDetails.js","Redux/reducers/authReducers.js","Redux/reducers/projectsReducer.js","Redux/reducers/rootReducer.js","Redux/store.js","components/auth/AuthIsLoaded.js","components/Error/404Page.js","components/auth/VerifyEmail.js","App.js","config/rrfConfig.js","index.js"],"names":["SIGN_IN_SUCCESS","SIGN_IN_FAILED","SIGN_OUT_SUCCESS","SIGN_UP_SUCCESS","SIGN_UP_FAILED","EMAIL_VERIFICATION_SENT","EMAIL_SENT_ERROR","signOutSuccess","type","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","settings","timestampsInSnapshots","signInWithFirebase","credentials","dispatch","auth","signInWithEmailAndPassword","email","password","then","sessionStorage","setItem","catch","err","payload","signInFailed","signUpWithFirebase","newUser","createUserWithEmailAndPassword","resp","collection","doc","user","uid","set","firstName","lastName","initials","currentUser","sendEmailVerification","emailSentError","message","signUpFailed","isEmailVerified","emailVerified","SignIn","props","useDispatch","authStatus","useSelector","state","signInStatus","initialState","useState","formData","setFormData","handleChange","e","target","name","value","to","className","onSubmit","preventDefault","location","text","htmlFor","id","onChange","error","SignUp","signUpStatus","passwordMatches","setPasswordMatches","cnfPassword","onClick","document","querySelectorAll","forEach","y","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","useFirestoreConnect","orderBy","projects","ordered","map","Notifications","limit","notifications","notification","content","time","fromNow","Dashboard","pathname","SignedInLinks","signOut","SignedOutLinks","Navbar","profile","ADD_PROJECT","addProjectToDb","getState","getFirestore","authorId","add","Date","addProject","addProjectError","CreateProject","projectData","setProjectData","history","push","autoComplete","ProjectDetails","match","params","data","success","failed","signOutStatus","emailVerification","sent","rootReducers","combineReducers","action","firestoreReducer","firebaseReducer","store","createStore","compose","reduxFirestore","fbConfig","applyMiddleware","thunk","withExtraArgument","getFirebase","AuthIsLoaded","children","useFirebase","isLoaded","getItem","ErrorPage","VerifyEmail","href","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","App","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5468eef5.chunk.js","sourcesContent":["export const SIGN_IN_SUCCESS = \"SIGN_IN_SUCCESS\";\r\nexport const SIGN_IN_FAILED = \"SIGN_IN_FAILED\";\r\nexport const SIGN_OUT_SUCCESS = \"SIGN_OUT_SUCCESS\";\r\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\r\nexport const SIGN_UP_FAILED = \"SIGN_UP_FAILED\";\r\nexport const EMAIL_VERIFICATION_SENT = \"EMAIL_VERIFICATION_SENT\";\r\nexport const EMAIL_SENT_ERROR = \"EMAIL_SENT_ERROR\";\r\n\r\nexport const signInSuccess = () => {\r\n  return {\r\n    type: SIGN_IN_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const signInFailed = (err) => {\r\n  return {\r\n    type: SIGN_IN_FAILED,\r\n    payload: err,\r\n  };\r\n};\r\n\r\nexport const signOutSuccess = () => {\r\n  return {\r\n    type: SIGN_OUT_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = () => {\r\n  return {\r\n    type: SIGN_UP_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const signUpFailed = (err) => {\r\n  return {\r\n    type: SIGN_UP_FAILED,\r\n    payload: err,\r\n  };\r\n};\r\n\r\nexport const emailVerificationSent = () => {\r\n  return {\r\n    type: EMAIL_VERIFICATION_SENT,\r\n  };\r\n};\r\n\r\nexport const emailSentError = (err) => {\r\n  return {\r\n    type: EMAIL_SENT_ERROR,\r\n    payload: err,\r\n  };\r\n};\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nexport const fbConfig = {\r\n  apiKey: \"AIzaSyB0ktDYDfDufqcr8hsSgnocoo9imrMppIc\",\r\n  authDomain: \"fir-tutorial-d729c.firebaseapp.com\",\r\n  databaseURL: \"https://fir-tutorial-d729c.firebaseio.com\",\r\n  projectId: \"fir-tutorial-d729c\",\r\n  storageBucket: \"fir-tutorial-d729c.appspot.com\",\r\n  messagingSenderId: \"918010698381\",\r\n  appId: \"1:918010698381:web:db412ad54a6d79fc92a0c4\",\r\n  measurementId: \"G-4SG88J5XM2\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(fbConfig);\r\n\r\nexport const projectFireStore = firebase.firestore();\r\n\r\n//Settings of firestore(just an update that tell the firebase how firestore work with timestamps)\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;\r\n","import {\r\n  emailSentError,\r\n  emailVerificationSent,\r\n  signInFailed,\r\n  signInSuccess,\r\n  signOutSuccess,\r\n  signUpFailed,\r\n  signUpSuccess,\r\n} from \"../actions/authActions\";\r\nimport firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\nimport { projectFireStore } from \"../../config/fbConfig\";\r\n\r\nexport const signInWithFirebase = (credentials) => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch(signInSuccess());\r\n        sessionStorage.setItem(\"userLoggedIn\", true);\r\n      })\r\n      .catch((err) => {\r\n        dispatch(signInFailed(err));\r\n      });\r\n  };\r\n};\r\n\r\n/* \r\nWe can get firebase using getFirebase method from the react-redux-firebase package but now that method is deprecated\r\nhence i have to use the traditional way of using firebase-->\r\n*/\r\n\r\nexport const signOutWithFirebase = () => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch(signOutSuccess());\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUpWithFirebase = (newUser) => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then((resp) => {\r\n        return firebase\r\n          .firestore()\r\n          .collection(\"users\")\r\n          .doc(resp.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initials: newUser.firstName[0] + newUser.lastName[0],\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch(signUpSuccess());\r\n        var user = firebase.auth().currentUser;\r\n        user\r\n          .sendEmailVerification()\r\n          .then(function () {\r\n            dispatch(emailVerificationSent());\r\n          })\r\n          .catch(function (err) {\r\n            dispatch(emailSentError(err.message));\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        dispatch(signUpFailed(err.message));\r\n      });\r\n  };\r\n};\r\n\r\n// export const isEmailVerified = () => {\r\n//   return (dispatch)=>{\r\n//       firebase.auth().currentUser.reload().then(()=>{\r\n\r\n//       })\r\n//   };\r\n// }\r\n","import firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\n\r\nexport const isEmailVerified = () => {\r\n  const user = firebase.auth().currentUser;\r\n\r\n  if (user) {\r\n    return user.emailVerified;\r\n  } else return null;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { signInWithFirebase } from \"../../Redux/asyncActions.js/authAsyncActions\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { isEmailVerified } from \"../../helpers/isEmailVerified\";\r\n\r\nfunction SignIn(props) {\r\n  const dispatch = useDispatch();\r\n  const authStatus = useSelector((state) => state.auth.signInStatus);\r\n  const auth = useSelector((state) => state.firebase.auth);\r\n\r\n  const initialState = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  const [formData, setFormData] = useState(initialState);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(signInWithFirebase(formData));\r\n    setFormData(initialState);\r\n  };\r\n\r\n  if (auth.uid) {\r\n    if (isEmailVerified()) {\r\n      return <Redirect to=\"/verify\" />;\r\n    }\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form className=\"blur-bg\" onSubmit={handleSubmit}>\r\n        {props.location.state ? (\r\n          <p className=\"center grey-text text-darken-3 alert-text\">\r\n            {props.location.state.text}\r\n          </p>\r\n        ) : null}\r\n        <h5 className=\"grey-text text-darken-3 center-align\">Sign-In</h5>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n            value={formData.email}\r\n          />\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            onChange={handleChange}\r\n            value={formData.password}\r\n          />\r\n        </div>\r\n        <div className=\"input-felid\">\r\n          <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n        </div>\r\n        <div className=\"red-text center\">\r\n          {authStatus.error ? <p>{authStatus.error}</p> : null}\r\n        </div>\r\n        <p className=\"center grey-text text-darken-3 \">\r\n          Not Registered?{\" \"}\r\n          <Link to=\"/signup\" className=\"link\">\r\n            Create Account\r\n          </Link>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { isEmailVerified } from \"../../helpers/isEmailVerified\";\r\nimport { signUpWithFirebase } from \"../../Redux/asyncActions.js/authAsyncActions\";\r\nfunction SignUp(props) {\r\n  const auth = useSelector((state) => state.firebase.auth);\r\n  const authStatus = useSelector((state) => state.auth.signUpStatus);\r\n  const dispatch = useDispatch();\r\n\r\n  const initialState = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n  };\r\n\r\n  const [formData, setFormData] = useState(initialState);\r\n\r\n  const [passwordMatches, setPasswordMatches] = useState(true);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const passwordVerification = (e) => {\r\n    if (e.target.value === formData.password) {\r\n      setPasswordMatches(true);\r\n    } else {\r\n      setPasswordMatches(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(signUpWithFirebase(formData));\r\n  };\r\n\r\n  if (auth.uid) {\r\n    if (!isEmailVerified()) {\r\n      return <Redirect to=\"/verify\" />;\r\n    }\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <form className=\"blur-bg\" onSubmit={handleSubmit}>\r\n        {props.location.state ? (\r\n          <p className=\"center grey-text text-darken-3 alert-text\">\r\n            {props.location.state.text}\r\n          </p>\r\n        ) : null}\r\n        <h5 className=\"grey-text text-darken-3 center-align\">Sign-Up</h5>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"firstName\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"firstName\"\r\n            id=\"firstName\"\r\n            onChange={handleChange}\r\n            value={formData.firstName}\r\n          />\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"lastName\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"lastName\"\r\n            id=\"lastName\"\r\n            onChange={handleChange}\r\n            value={formData.lastName}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n            value={formData.email}\r\n          />\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            className=\"psw-inp\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            onChange={handleChange}\r\n            value={formData.password}\r\n          />\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"cnfPassword\">Confirm Password</label>\r\n          <input\r\n            className=\"psw-inp\"\r\n            type=\"password\"\r\n            name=\"cnfPassword\"\r\n            id=\"cnfPassword\"\r\n            onChange={passwordVerification}\r\n            value={formData.cnfPassword}\r\n          />\r\n        </div>\r\n        <p>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              onClick={() => {\r\n                var x = document.querySelectorAll(\".psw-inp\");\r\n                x.forEach((y) => {\r\n                  if (y.type === \"password\") {\r\n                    y.type = \"text\";\r\n                  } else {\r\n                    y.type = \"password\";\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n            <span>Show Password</span>\r\n          </label>\r\n        </p>\r\n        {!passwordMatches && (\r\n          <p className=\"red-text\">Password didn't Matches</p>\r\n        )}\r\n\r\n        <div className=\"input-felid\">\r\n          <button className=\"btn pink lighten-1 z-depth-0\">SignUp</button>\r\n        </div>\r\n\r\n        <div className=\"red-text center\">\r\n          {authStatus.error ? <p>{authStatus.error}</p> : null}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nfunction ProjectSummary({ project }) {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary blur-bg\">\r\n      <div className=\"card-content gray-text-text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>\r\n          Posted by the {project.authorFirstName} {project.authorLastName}\r\n        </p>\r\n        <div className=\"white-text darken-3 mt\">\r\n          {moment(project.createdAt.toDate()).calendar()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectSummary;\r\n","import ProjectSummary from \"./ProjectSummary\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useFirestoreConnect } from \"react-redux-firebase\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction ProjectList() {\r\n  // now we will subscribe this component to our firestore so that it sync all the projects directly from the cloud\r\n  useFirestoreConnect([\r\n    {\r\n      collection: \"projects\",\r\n      orderBy: [\"createdAt\", \"desc\"],\r\n    },\r\n  ]);\r\n\r\n  const firestore = useSelector((state) => state.firestore);\r\n  const projects = useSelector((state) => state.firestore.ordered.projects);\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects &&\r\n        projects.map((project) => (\r\n          <Link to={`/project/${project.id}`} key={project.id}>\r\n            <ProjectSummary project={project} />\r\n          </Link>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectList;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useFirestoreConnect } from \"react-redux-firebase\";\r\nimport moment from \"moment\";\r\n\r\nfunction Notifications() {\r\n  useFirestoreConnect([\r\n    {\r\n      collection: \"notifications\",\r\n      limit: 4,\r\n      orderBy: [\"time\", \"desc\"],\r\n    },\r\n  ]);\r\n\r\n  const notifications = useSelector(\r\n    (state) => state.firestore.ordered.notifications\r\n  );\r\n\r\n  return (\r\n    <div className=\"section notifications-section\">\r\n      <div className=\"card z-depth-0 blur-bg\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title center\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            {notifications &&\r\n              notifications.map((notification) => {\r\n                return (\r\n                  <li key={notification.id} className=\"notification\">\r\n                    <span className=\"pink-text font-size-1\">\r\n                      {notification.user}\r\n                    </span>{\" \"}\r\n                    &nbsp;\r\n                    <span>{notification.content}</span>\r\n                    <div className=\"grey-text text-darken-3 note-date\">\r\n                      {moment(notification.time.toDate()).fromNow()}\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport Notifications from \"./Notifications\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { isEmailVerified } from \"../../helpers/isEmailVerified\";\r\n\r\nfunction Dashboard() {\r\n  const auth = useSelector((state) => state.firebase.auth);\r\n\r\n  if (!auth.uid) {\r\n    const authText = \"To Continue with the app please Sign In First :)\";\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/signin\",\r\n          state: {\r\n            text: authText,\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  } else if (!isEmailVerified()) {\r\n    const authText = \"Please Verify Your Email first :)\";\r\n\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/verify\",\r\n          state: {\r\n            text: authText,\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard container\">\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m6\">\r\n          {/* this div is for project list */}\r\n          <ProjectList />\r\n        </div>\r\n        <div className=\"col s12 m5 offset-m1\">\r\n          {/* this div is for notification list */}\r\n          <Notifications />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { signOutWithFirebase } from \"../../Redux/asyncActions.js/authAsyncActions\";\r\n\r\nfunction SignedInLinks({ initials }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = (e) => {\r\n    dispatch(signOutWithFirebase());\r\n  };\r\n\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/create\">New Project</NavLink>\r\n      </li>\r\n      <li>\r\n        <a onClick={handleClick}>Log Out</a>\r\n      </li>{\" \"}\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n          {initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default SignedInLinks;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction SignedOutLinks() {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"signup/\">SignUp</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signin\">LogIn</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default SignedOutLinks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Navbar() {\r\n  const firebase = useSelector((state) => state.firebase);\r\n  return (\r\n    <div className=\"navbar-fixed\">\r\n      <nav className=\"nav-wrapper grey darken-3\">\r\n        <div className=\"container\">\r\n          <Link to=\"/\" className=\"brand-logo\">\r\n            CloveS\r\n          </Link>\r\n          {firebase.auth.uid ? (\r\n            <SignedInLinks initials={firebase.profile.initials} />\r\n          ) : (\r\n            <SignedOutLinks />\r\n          )}\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","export const ADD_PROJECT = \"ADD_PROJECT\";\r\nexport const REMOVE_PROJECT = \"REMOVE_PROJECT\";\r\nexport const ADD_PROJECT_ERROR = \"ADD_PROJECT_ERROR\";\r\n\r\n//Action creators-->\r\nexport const addProject = (project) => {\r\n  return {\r\n    type: ADD_PROJECT,\r\n    payload: project,\r\n  };\r\n};\r\n\r\nexport const removeProject = (project_id) => {\r\n  return {\r\n    type: REMOVE_PROJECT,\r\n    payload: project_id,\r\n  };\r\n};\r\n\r\nexport const addProjectError = (err) => {\r\n  return {\r\n    type: ADD_PROJECT_ERROR,\r\n    payload: err,\r\n  };\r\n};\r\n","// previously we just return a object with type and payload property in our action creator but now we can return a function\r\n// the function which we return have two property one is dispatch of store and the other is getState to see the current state of the store\r\n\r\nimport { addProject, addProjectError } from \"../actions/projectsActions\";\r\n\r\nexport const addProjectToDb = (project) => {\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n\r\n    //>>make a async call to the DB\r\n    const firestore = getFirestore();\r\n    firestore\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date(),\r\n      })\r\n      .then(() => {\r\n        dispatch(addProject(project));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(addProjectError(err));\r\n      });\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addProjectToDb } from \"../../Redux/asyncActions.js/projectsAsyncActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { isEmailVerified } from \"../../helpers/isEmailVerified\";\r\n\r\nfunction CreateProject(props) {\r\n  const [projectData, setProjectData] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n  });\r\n\r\n  const auth = useSelector((state) => state.firebase.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    setProjectData({\r\n      ...projectData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addProjectToDb(projectData));\r\n\r\n    //>> To redirect the user, to home page after creating project..\r\n    props.history.push(\"/\");\r\n\r\n    // firestore.collection(\"projects\").add({\r\n    //   ...projectData,\r\n    //   authorFirstName: \"CNU\",\r\n    //   authorLastName: \"Singhaniya\",\r\n    //   authorId: \"12345\",\r\n    //   createdAt: new Date(),\r\n    // });\r\n  };\r\n\r\n  if (!auth.uid) {\r\n    const authText = \"To Continue with the app please Sign In First :)\";\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/signin\",\r\n          state: {\r\n            text: authText,\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  } else if (!isEmailVerified()) {\r\n    const authText = \"Please Verify Your Email first :)\";\r\n\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/verify\",\r\n          state: {\r\n            text: authText,\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={handleSubmit} className=\"blur-bg\" autoComplete=\"off\">\r\n        <h5 className=\"grey-text text-darken-3 center-align\">\r\n          Create Project -_-\r\n        </h5>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"title\">Title</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            id=\"title\"\r\n            onChange={handleChange}\r\n            value={projectData.title}\r\n          />\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"content\">Content</label>\r\n          <textarea\r\n            name=\"content\"\r\n            id=\"content\"\r\n            className=\"materialize-textarea\"\r\n            onChange={handleChange}\r\n            value={projectData.content}></textarea>\r\n        </div>\r\n\r\n        <div className=\"input-felid\">\r\n          <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateProject;\r\n","import React from \"react\";\r\nimport { useFirestoreConnect } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { isEmailVerified } from \"../../helpers/isEmailVerified\";\r\nimport moment from \"moment\";\r\n\r\nfunction ProjectDetails(props) {\r\n  // we are extracting information of the route parameter which we pass in the path in the route\r\n  const id = props.match.params.id;\r\n\r\n  //* Now we have to subscribe this component to firestore so that it can also receives updates directly from the cloud.\r\n  useFirestoreConnect([\"projects\"]);\r\n\r\n  const projects = useSelector((state) => state.firestore.data.projects);\r\n  // But this projects contain all the projects which we don't want we want a project with the particular id-->\r\n  const project = projects ? projects[id] : null;\r\n\r\n  const auth = useSelector((state) => state.firebase.auth);\r\n\r\n  if (!auth.uid) {\r\n    const authText = \"To Continue with the app please Sign In First :)\";\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/signin\",\r\n          state: {\r\n            text: authText,\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  } else if (!isEmailVerified()) {\r\n    const authText = \"Please Verify Your Email first :)\";\r\n\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/verify\",\r\n          state: {\r\n            text: authText,\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  let returnJsx;\r\n  if (project) {\r\n    returnJsx = (\r\n      <div className=\"container project-details section\">\r\n        <div className=\"card blur-bg\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">Project Title- {project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey-text  text-darken-3\">\r\n            <div>{`Posted by The ${project.authorFirstName} ${project.authorLastName}`}</div>\r\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    returnJsx = (\r\n      <div className=\"container center\">\r\n        <h1 className=\"white-text\">Loading Project...</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return returnJsx;\r\n}\r\n\r\nexport default ProjectDetails;\r\n","import {\r\n  EMAIL_SENT_ERROR,\r\n  EMAIL_VERIFICATION_SENT,\r\n  SIGN_IN_FAILED,\r\n  SIGN_IN_SUCCESS,\r\n  SIGN_OUT_SUCCESS,\r\n  SIGN_UP_FAILED,\r\n  SIGN_UP_SUCCESS,\r\n} from \"../actions/authActions\";\r\n\r\nconst authStatus = {\r\n  signInStatus: {\r\n    success: null,\r\n    failed: null,\r\n    error: null,\r\n  },\r\n\r\n  signOutStatus: null,\r\n  signUpStatus: {\r\n    success: null,\r\n    failed: null,\r\n    error: null,\r\n  },\r\n  emailVerification: {\r\n    sent: null,\r\n    error: null,\r\n  },\r\n};\r\n\r\nexport const authReducer = (state = authStatus, action) => {\r\n  switch (action.type) {\r\n    case SIGN_IN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        signInStatus: {\r\n          success: true,\r\n          failed: false,\r\n          error: null,\r\n        },\r\n      };\r\n\r\n    case SIGN_IN_FAILED:\r\n      return {\r\n        ...state,\r\n        signInStatus: {\r\n          success: false,\r\n          failed: true,\r\n          error: action.payload.message,\r\n        },\r\n      };\r\n\r\n    case SIGN_OUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        signOutStatus: true,\r\n      };\r\n\r\n    case SIGN_UP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        signUpStatus: {\r\n          success: true,\r\n          failed: false,\r\n          error: null,\r\n        },\r\n      };\r\n\r\n    case SIGN_UP_FAILED:\r\n      return {\r\n        ...state,\r\n        signUpStatus: {\r\n          success: false,\r\n          failed: true,\r\n          error: action.payload,\r\n        },\r\n      };\r\n\r\n    case EMAIL_VERIFICATION_SENT:\r\n      return {\r\n        ...state,\r\n        emailVerification: {\r\n          sent: true,\r\n          error: null,\r\n        },\r\n      };\r\n\r\n    case EMAIL_SENT_ERROR:\r\n      return {\r\n        ...state,\r\n        emailVerification: {\r\n          sent: false,\r\n          error: action.payload,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ADD_PROJECT } from \"../actions/projectsActions\";\r\n\r\nconst initialState = {\r\n  projects: [\r\n    {\r\n      id: \"1\",\r\n      title: \"let's build that stuff\",\r\n      content: \"blah blah blah blah\",\r\n    },\r\n    {\r\n      id: \"2\",\r\n      title: \"help me find the peach\",\r\n      content: \"blah blah blah blah\",\r\n    },\r\n    {\r\n      id: \"3\",\r\n      title: \"egg hunt with yoshi\",\r\n      content: \"blah blah blah blah\",\r\n    },\r\n  ],\r\n};\r\nexport const projectReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: [action.payload, ...state.projects],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducers\";\r\nimport { projectReducer } from \"./projectsReducer\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\n\r\nexport const rootReducers = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducers } from \"./reducers/rootReducer\";\r\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\r\nimport { getFirebase } from \"react-redux-firebase\";\r\nimport fbConfig from \"../config/fbConfig\";\r\n\r\nexport const store = createStore(\r\n  rootReducers,\r\n  compose(\r\n    reduxFirestore(fbConfig),\r\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase }))\r\n  )\r\n);\r\n// Now as we want to connect our global store with our firebase then we have to perform some aync call for that hence we have to use redux-thunk that allow us a way to interact with actions before it reaches to the reducer...\r\n\r\n//>> the applyMiddleware is function which can take multiple middleware which will increase our store functionality hence called store enhancers\r\n//-- So next time if you heard the term storeEnhancers it is nothing but just third party packages that increase the functionality of our store\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isLoaded, useFirebase } from \"react-redux-firebase\";\r\nimport { signOutSuccess } from \"../../Redux/actions/authActions\";\r\n\r\nfunction AuthIsLoaded({ children }) {\r\n  const auth = useSelector((state) => state.firebase.auth);\r\n  const firebase = useFirebase();\r\n  const dispatch = useDispatch();\r\n\r\n  if (!isLoaded(auth)) {\r\n    // If tab is closed then sessionStorage will be cleared and hence we will  logout from our app.\r\n    if (!sessionStorage.getItem(\"userLoggedIn\")) {\r\n      firebase\r\n        .auth()\r\n        .signOut()\r\n        .then(() => {\r\n          dispatch(signOutSuccess());\r\n        });\r\n    }\r\n    return <div className=\"container section center\">Loading Screen...</div>;\r\n  }\r\n  return children;\r\n}\r\n\r\nexport default AuthIsLoaded;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction ErrorPage() {\r\n  return (\r\n    <div className=\"error-page center\">\r\n      <Link\r\n        to=\"/\"\r\n        className=\"home waves-effect waves-light btn-small pink lighten-2\">\r\n        Go TO Home\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ErrorPage;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { isEmailVerified } from \"../../helpers/isEmailVerified\";\r\n\r\nfunction VerifyEmail(props) {\r\n  const auth = useSelector((state) => state.firebase.auth);\r\n\r\n  if (!auth.uid) {\r\n    const authText = \"Before Verifying, Please Register your email\";\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/signup\",\r\n          state: {\r\n            text: authText,\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  } else if (isEmailVerified()) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container section\">\r\n      <div className=\"section blur-bg verify-div\">\r\n        <h5 className=\"grey-text text-darken-3 center-align\">\r\n          Verify Your Email First\r\n        </h5>\r\n        <p className=\"section center\">Go and check your mail :)</p>\r\n\r\n        <p className=\"center\">\r\n          didn't get verification email?{\" \"}\r\n          <a href=\"#\" className=\"link\">\r\n            Resend Email\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VerifyEmail;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport Navbar from \"./components/layouts/Navbar\";\nimport CreateProject from \"./components/projects/CreateProject\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./Redux/store\";\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\nimport { createFirestoreInstance } from \"redux-firestore\";\nimport { rrfConfig } from \"./config/rrfConfig\";\nimport firebase from \"./config/fbConfig\";\nimport AuthIsLoaded from \"./components/auth/AuthIsLoaded\";\nimport ErrorPage from \"./components/Error/404Page\";\nimport VerifyEmail from \"./components/auth/VerifyEmail\";\n\n// Creating react-redux-firestore props:\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance, // <- needed if using firestore\n};\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Provider store={store}>\n          <ReactReduxFirebaseProvider {...rrfProps}>\n            <AuthIsLoaded>\n              <Navbar />\n              <Switch>\n                <Route exact path=\"/\" component={Dashboard} />\n                <Route exact path=\"/project/:id\" component={ProjectDetails} />\n                <Route exact path=\"/signin\" component={SignIn} />\n                <Route exact path=\"/signup\" component={SignUp} />\n                <Route exact path=\"/create\" component={CreateProject} />\n                <Route exact path=\"/verify\" component={VerifyEmail} />\n                <Route component={ErrorPage} />\n              </Switch>\n            </AuthIsLoaded>\n          </ReactReduxFirebaseProvider>\n        </Provider>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","export const rrfConfig = {\r\n  userProfile: \"users\",\r\n  useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DBq\r\n};\r\n\r\n/* \r\nThese two properties:\r\nuserProfile and useFirestoreForProfile are used so that\r\nwe can  fetch extra data of a user which we store in firestore like firstName, lastName..etc\r\n\r\nuseFirestoreForProfile fetch the collection from the firestore with id == auth.uid\r\n\r\nand the userProfile tells the collection name from which to fetch the data..in the firestore\r\n\r\n*/\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}